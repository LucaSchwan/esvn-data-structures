#+TITLE: ehrenschwan data structures
#+AUTHOR: ehrenschwan

This an implementation of standard data structures in Typescript for educational purposes.

* Data Structures

** [7/18]Singly Linked List
+ [X] getHead
+ [X] getSize
+ [X] addNode
+ [X] add
+ [ ] nodeAtIndex
+ [ ] atIndex
+ [ ] indexOf
+ [X] insertAfter
+ [X] insertBeginning
+ [ ] insert
+ [X] removeAfter
+ [X] removeBeginning 
+ [ ] removeAtIndex
+ [ ] contains
+ [ ] reverse
+ [ ] forEach
+ [ ] toString
+ [ ] toArray
+ [ ] isEmpty
** [7/25] Doubly Linked List
+ [X] getFirst
+ [X] getLast
+ [X] getSize
+ [ ] addNode*
+ [ ] add*
+ [ ] nodeAtIndex
+ [ ] atIndex
+ [ ] indexOf
+ [ ] insertBefore*
+ [ ] insertAfter*
+ [X] insertBeginning
+ [X] insertEnd
+ [ ] insert
+ [ ] removeBefore*
+ [ ] removeAfter*
+ [X] removeBeginning
+ [X] removeEnd
+ [ ] removeAtIndex
+ [ ] contains
+ [ ] reverse
+ [ ] forEach
+ [ ] toString
+ [ ] toArray
+ [ ] size
+ [ ] isEmpty
** [5/9] Stack
+ [X] getHead
+ [X] getSize
+ [X] push
+ [X] pop
+ [X] peak
+ [ ] toString
+ [ ] toArray
+ [ ] isEmpty
** [5/8] Queue
+ [X] getFirst
+ [X] getLast
+ [X] getSize
+ [X] enqueue
+ [X] dequeue
+ [ ] toString
+ [ ] toArray
+ [ ] isEmpty
** [0/0] Binary Tree
** [0/0] Binary Search Tree
** [0/0] Heap
** [0/0] Hashing
** [0/0] Graph
** [0/0] Matrix
